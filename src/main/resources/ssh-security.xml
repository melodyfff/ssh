<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:security="http://www.springframework.org/schema/security"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">


    <security:http pattern="/welcome" security="none" />
    <security:http pattern="/remote/**" security="none" />
    <!--<security:http pattern="/login" security="none"  />-->
    <!--<security:http pattern="/logout" security="none" />-->

    <http auto-config="true">
        <intercept-url pattern="/index"  />
        <intercept-url pattern="/login"  access="permitAll()"/>
        <intercept-url pattern="/logout"  access="permitAll()" />
        <intercept-url pattern="/admin**" access="isAuthenticated()" />
        <!--authentication-success-handler-ref="customSuccessHandler"-->
        <form-login
                login-page="/login"
                default-target-url="/welcome"
                authentication-failure-url="/login?error"
                username-parameter="username"
                password-parameter="password" />
        <logout logout-url="/j_spring_security_logout"
                logout-success-url="/login?logout"
                delete-cookies="JSESSIONID" />
        <!-- enable csrf protection -->
        <csrf/>

        <!--session 超时跳转页面-->
        <session-management invalid-session-url="/login" >
            <concurrency-control max-sessions="1" />
        </session-management>

        <!--无权访问403页面-->
        <access-denied-handler error-page="/403.jsp"/>

        <!--添加自定义的过滤器 放在FILTER_SECURITY_INTERCEPTOR之前有效 -->
        <custom-filter ref="customFilterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR" />
    </http>

    <!--开启 @PostAuthorize，@Secured和Spring EL表达式的方法级安全 -->
    <!-- 该注解要放到 servlet.xml 中 https://stackoverflow.com/questions/3087548/can-spring-security-use-preauthorize-on-spring-controllers-methods -->
    <!--<security:global-method-security pre-post-annotations="enabled" proxy-target-class="true" />-->

    <!--<beans:bean id="customFilterSecurityInterceptor" class="com.xinchen.ssh.core.security.CustomFilterSecurityInterceptor">-->
        <!--<beans:property name="authenticationManager" ref="authenticationManager" />-->
        <!--<beans:property name="accessDecisionManager" ref="customAccessDecisionManager" />-->
        <!--<beans:property name="securityMetadataSource" ref="customSecurityMetadataSource" />-->
    <!--</beans:bean>-->


    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="customUserDetailsService">
            <password-encoder ref="bcryptEncoder"/>
        </authentication-provider>
    </authentication-manager>

    <!--加密-->
    <beans:bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
    <!--<beans:bean id="customUserDetailsService" class="com.xinchen.ssh.core.security.CustomUserDetailsService" />-->

</beans:beans>